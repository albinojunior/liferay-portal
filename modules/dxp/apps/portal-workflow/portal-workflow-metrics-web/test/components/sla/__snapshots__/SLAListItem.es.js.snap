// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render component 1`] = `
<tr>
  <td
    className="table-cell-expand"
  >
    <div
      className="table-list-title"
    >
       
      <a
        href="/sla/edit/undefined/1234?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
        onClick={[Function]}
      />
    </div>
  </td>
  <td />
  <td
    className=""
  >
    running
  </td>
  <td>
    1min
  </td>
  <td>
    May 06
  </td>
  <td
    className="actions"
  >
    <div
      className="dropdown dropdown-action"
    >
      <a
        aria-expanded="false"
        aria-haspopup="true"
        className="component-action dropdown-toggle"
        data-toggle="liferay-dropdown"
        href="#1"
        id="dropDownAction"
        role="button"
      >
        <svg
          className="lexicon-icon lexicon-icon-ellipsis-v"
          role="presentation"
        >
          <use
            xlinkHref="#ellipsis-v"
          />
        </svg>
      </a>
      <ul
        aria-labelledby=""
        className="dropdown-menu dropdown-menu-right"
      >
        <li>
          <a
            className="dropdown-item"
            href="/sla/edit/undefined/1234?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
            onClick={[Function]}
          >
            edit
          </a>
        </li>
        <li>
          <button
            className="dropdown-item"
            onClick={[Function]}
          >
            delete
          </button>
        </li>
      </ul>
    </div>
  </td>
</tr>
`;

exports[`Should render component 2`] = `
<MockRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/1/20/title%3Aasc",
            "search": "?backPath=%2F",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/1/20/title%3Aasc",
          "search": "?backPath=%2F",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <FilterContextProvider>
      <Route
        path="/:page/:pageSize/:sort"
        render={[Function]}
      >
        <SLAListItem
          dateModified={2019-05-06T20:32:18.000Z}
          duration={58000}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/1/20/title%3Aasc",
                  "search": "?backPath=%2F",
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          instancesCount="10"
          onTime="5"
          overdue="5"
          page="1"
          pageSize="20"
          processName="Process test"
          query="?backPath=%2F"
          routeParams={
            Object {
              "page": "1",
              "pageSize": "20",
              "sort": "title:asc",
            }
          }
          sort="title:asc"
        >
          <tr>
            <td
              className="table-cell-expand"
            >
              <div
                className="table-list-title"
              >
                 
                <ChildLink
                  to="/sla/edit/undefined/undefined"
                >
                  <Link
                    to={
                      Object {
                        "pathname": "/sla/edit/undefined/undefined",
                        "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F",
                      }
                    }
                  >
                    <a
                      href="/sla/edit/undefined/undefined?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
                      onClick={[Function]}
                    />
                  </Link>
                </ChildLink>
              </div>
            </td>
            <td />
            <td
              className=""
            >
              running
            </td>
            <td>
              1min
            </td>
            <td>
              May 06
            </td>
            <td
              className="actions"
            >
              <div
                className="dropdown dropdown-action"
              >
                <a
                  aria-expanded="false"
                  aria-haspopup="true"
                  className="component-action dropdown-toggle"
                  data-toggle="liferay-dropdown"
                  href="#1"
                  id="dropDownAction"
                  role="button"
                >
                  <ForwardRef
                    symbol="ellipsis-v"
                  >
                    <svg
                      className="lexicon-icon lexicon-icon-ellipsis-v"
                      key="ellipsis-v"
                      role="presentation"
                    >
                      <use
                        xlinkHref="#ellipsis-v"
                      />
                    </svg>
                  </ForwardRef>
                </a>
                <ul
                  aria-labelledby=""
                  className="dropdown-menu dropdown-menu-right"
                >
                  <li>
                    <ChildLink
                      className="dropdown-item"
                      to="/sla/edit/undefined/undefined"
                    >
                      <Link
                        className="dropdown-item"
                        to={
                          Object {
                            "pathname": "/sla/edit/undefined/undefined",
                            "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F",
                          }
                        }
                      >
                        <a
                          className="dropdown-item"
                          href="/sla/edit/undefined/undefined?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
                          onClick={[Function]}
                        >
                          edit
                        </a>
                      </Link>
                    </ChildLink>
                  </li>
                  <li>
                    <button
                      className="dropdown-item"
                      onClick={[Function]}
                    >
                      delete
                    </button>
                  </li>
                </ul>
              </div>
            </td>
          </tr>
        </SLAListItem>
      </Route>
    </FilterContextProvider>
  </Router>
</MockRouter>
`;

exports[`Should render component blocked 1`] = `
<MockRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/1/20/title%3Aasc",
            "search": "?backPath=%2F",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/1/20/title%3Aasc",
          "search": "?backPath=%2F",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <FilterContextProvider>
      <Route
        path="/:page/:pageSize/:sort"
        render={[Function]}
      >
        <SLAListItem
          dateModified={2019-05-06T20:32:18.000Z}
          duration={58000}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/1/20/title%3Aasc",
                  "search": "?backPath=%2F",
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/1/20/title%3Aasc",
                "search": "?backPath=%2F",
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          instancesCount="10"
          onTime="5"
          overdue="5"
          page="1"
          pageSize="20"
          processName="Process test"
          query="?backPath=%2F"
          routeParams={
            Object {
              "page": "1",
              "pageSize": "20",
              "sort": "title:asc",
            }
          }
          sort="title:asc"
          status={2}
        >
          <tr>
            <td
              className="table-cell-expand"
            >
              <div
                className="table-list-title"
              >
                <ForwardRef
                  className="text-danger"
                  symbol="exclamation-full"
                >
                  <svg
                    className="lexicon-icon lexicon-icon-exclamation-full text-danger"
                    key="exclamation-full"
                    role="presentation"
                  >
                    <use
                      xlinkHref="#exclamation-full"
                    />
                  </svg>
                </ForwardRef>
                 
                <ChildLink
                  to="/sla/edit/undefined/undefined"
                >
                  <Link
                    to={
                      Object {
                        "pathname": "/sla/edit/undefined/undefined",
                        "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F",
                      }
                    }
                  >
                    <a
                      href="/sla/edit/undefined/undefined?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
                      onClick={[Function]}
                    />
                  </Link>
                </ChildLink>
              </div>
            </td>
            <td />
            <td
              className="text-danger"
            >
              blocked
            </td>
            <td>
              1min
            </td>
            <td>
              May 06
            </td>
            <td
              className="actions"
            >
              <div
                className="dropdown dropdown-action"
              >
                <a
                  aria-expanded="false"
                  aria-haspopup="true"
                  className="component-action dropdown-toggle"
                  data-toggle="liferay-dropdown"
                  href="#1"
                  id="dropDownAction"
                  role="button"
                >
                  <ForwardRef
                    symbol="ellipsis-v"
                  >
                    <svg
                      className="lexicon-icon lexicon-icon-ellipsis-v"
                      key="ellipsis-v"
                      role="presentation"
                    >
                      <use
                        xlinkHref="#ellipsis-v"
                      />
                    </svg>
                  </ForwardRef>
                </a>
                <ul
                  aria-labelledby=""
                  className="dropdown-menu dropdown-menu-right"
                >
                  <li>
                    <ChildLink
                      className="dropdown-item"
                      to="/sla/edit/undefined/undefined"
                    >
                      <Link
                        className="dropdown-item"
                        to={
                          Object {
                            "pathname": "/sla/edit/undefined/undefined",
                            "search": "?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F",
                          }
                        }
                      >
                        <a
                          className="dropdown-item"
                          href="/sla/edit/undefined/undefined?backPath=%2F1%2F20%2Ftitle%253Aasc%3FbackPath%3D%252F"
                          onClick={[Function]}
                        >
                          edit
                        </a>
                      </Link>
                    </ChildLink>
                  </li>
                  <li>
                    <button
                      className="dropdown-item"
                      onClick={[Function]}
                    >
                      delete
                    </button>
                  </li>
                </ul>
              </div>
            </td>
          </tr>
        </SLAListItem>
      </Route>
    </FilterContextProvider>
  </Router>
</MockRouter>
`;
